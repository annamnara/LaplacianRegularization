# include <sstream> 
# include<iostream>
# include <fstream>
# include <string>
# include <vector>
# include <stdlib.h>
# include <algorithm>
# include <iterator>
# include <cstdlib>
# include <math.h>
# include <iterator>
#include <ctime> 
#include <cstring> 
#include <stdio.h> 
# include "LabelPropagation.hpp"
using namespace std;
int main(int argc, char* argv[])
{


LabelPropagation  lp;

FILE* fp;
fp=fopen(argv[1],"r");
char  paramName[50];
char  paramType[50];
char  paramValue[50];
char  line[100];

while (fgets(line,500,fp) != NULL) {
if(line[0]!='#')
{

sscanf(line,"%s %s %s",paramName,paramType,paramValue);

if(strcmp(paramName,"weightFile")==0)
lp.weightFile=paramValue;

if(strcmp(paramName,"labelFile")==0)
lp.labelFile=paramValue;

if(strcmp(paramName,"noExamples")==0)
lp.noExamples=atoi(paramValue);

if(strcmp(paramName,"lbr")==0)
lp.lbr=atoi(paramValue);

if(strcmp(paramName,"noitr")==0)
lp.noIterations=atoi(paramValue);

}
 
}
cout<< "params are: "<< "No. of Exmaples"<<lp.noExamples<<" \t"<< " Weight filename:"<< lp.weightFile<<"\t"<< "Iterations:"<<lp.noIterations<< "\t"<< "Labeling Rate :"<<lp.lbr<<endl;

lp.LoadWeightMatrix();
//lp.DisplayWeightMatrix();

lp.TransitionMatrixCal();
//lp.DisplayTransitionMatrix();
lp.PrepareYMatrix();
lp.LPAlgorithm();
//lp.DisplayYMatrix();
lp.DisplayActYMatrix();
}

